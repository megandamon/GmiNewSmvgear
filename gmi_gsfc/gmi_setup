#!/bin/csh -f
########################################################################
#
#  Name: gmi_setup
#
#  Purposes -
#    * provide single location for BASEDIR and module values
#    * initialize the following:
#      - set BASEDIR
#      - update LD_LIBRARY_PATH with BASEDIR lib
#      - load library modules
#      - GMIHOME
#    * echo expected BASEDIR and library module values when queried
#
#  Notes:
#  1. The script will not function correctly if the scriptname
#     definition within the script is incorrect.
#  2. Type "gmi_setup help" for usage information.
#
#  REVISION HISTORY
#  10Feb2010  Kouatchou   Initial version of code
#
########################################################################

# NOTE: Spell out scriptname--DO NOT USE $0 here!
#------------------------------------------------
set scriptname = gmi_setup

# Set the chemical mechanism
#---------------------------
set chemcase = strat_trop
#set chemcase = aerosol
#set chemcase = micro_aerosol
#set chemcase = gocart_aerosol
#set chemcase = troposphere
#set chemcase = stratosphere

# get architecture, machine, and node information
#------------------------------------------------
set arch = `uname -s`
set mach = `uname -m`
set node = `uname -n`
set gmihome = `pwd`
set HNAME = `hostname`

alias echo2  "echo \!* > /dev/stderr"

# get values
#-----------
if ($arch == Linux) then
   if ($mach == ia64)   goto IA64
   if ($mach == x86_64) goto X86_64
   if ($mach == i686)   goto I686

else if ($arch == IRIX64) then
   if ($mach == IP27) goto IP27
   if ($mach == IP35) goto IP35
endif

# ERROR -- unknown architecture/machine
#--------------------------------------
echo2 "${scriptname}: >>>WARNING<<< unrecognizable arch/machine = $arch/$mach"
echo 0   # indicating error condition
exit 8


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                     IA64 values (Linux)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
IA64:

#================#
#  IA64 default  #
#================#
set basedir = $HOME/baselibs/v2_2rp2t
set mod1 = intel-comp.8.1.034
set mod2 = mpt.1.12.0.nas
set mod3 = scsl.1.5.1.1

set mods = ( $mod1 $mod2 $mod3 )
set modinit = /opt/modules/modules/init/csh
set loadmodules = 0

#================#
#  PALM/EXPLORE  #
#================#
if (($node =~ palm*) || ($node =~ e?)) then

   set basedir = /home/trayanov/baselibs/v2_2rp2_nb2
   set mod1 = intel-comp.8.1.034
   set mod2 = mpt.1.12.0.nas
   set mod3 = scsl.1.5.1.1

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /opt/modules/modules/init/csh
   set loadmodules = 0

#================#
#  COLUMBIA/CFE  #
#================#
else if (($node =~ cfe*) || ($node =~ columbia*)) then

   set basedir = /u/dkokron/Baselibs/GMAO-Baselibs-3_1_5/intel-comp.9.1.049

   set mod1 = intel-comp.9.1.049
   set mod2 = mpt.1.22.0.0
   set mod3 = scsl.1.6.1.0

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /usr/share/modules/init/tcsh
   set loadmodules = 0

#===========#
#  THUNDER  #
#===========#
else if ($node == thunder) then

   set basedir = /share/dasilva/baselibs/v2_2rp2_nb2
   set mod1 = intel-comp.8.1.034
   set mod2 = mpt.1.12.0.0
   set mod3 = scsl.1.5.1.1

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /usr/share/modules/init/tcsh
   set loadmodules = 0

endif
goto ACTION

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                     X86_64 values (Linux)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
X86_64:

#==================#
#  X86_64 default  #
#==================#
set basedir = /usr/local/other/baselibs/v2_2rp2_213_9.1.042meta_new
set mod1 = comp/intel-9.1.042
set mod2 = lib/mkl-9.0.017
set mod3 = mpi/scali-5.3

set mods = ( $mod1 $mod2 $mod3 )
set modinit = /share/modules/init/csh
set loadmodules = 0

#=================#
#  DISCOVER/BORG  #
#=================#
if (($node =~ discover*) || ($node =~ borg*)) then

   set basedir = /discover/nobackup/projects/gmao/share/dao_ops/Baselibs/v3.2.0_buildSLES11
   set mod1 = comp/intel-11.0.083
   set mod2 = lib/mkl-10.0.3.020
   set mod3 = mpi/impi-4.0.3.008

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /usr/share/modules/init/csh
   set loadmodules = 0

   set architecture = ARCH_INTEL

#============#
#  PLEIADES  #
#============#
else if ( ($node =~ pfe*) || ($node =~ p4fe*) || ($node =~ r[0-9]*i[0-9]*n[0-9]*) ) then

   set basedir = /u/dkokron/Baselibs/GMAO-Baselibs-3_1_5/Intel-10.1.015_64_mptpre
   set mod1 = comp/intel/10.1.015_64
   set mod2 = mpi/mpt.1.23.pre
   set mod3 = math/intel_mkl_64_10.0.011

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /usr/share/modules/init/tcsh
   set loadmodules = 0

#=================#
#     JAGUAR      #
#=================#
else if (($node =~ jaguar*) || ($node =~ yodjag*)) then
   
   set basedir = /ccs/home/dkokron/Baselibs/GMAO-Baselibs-3_1_5
   set mod1 = Base-opts/2.1.41HD
   set mod2 = PrgEnv-pgi/2.1.41HD
   set mod3 = xtpe-quadcore

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /opt/modules/default/init/csh
   set loadmodules = 0

endif

goto ACTION

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                      I686 values (Linux)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
I686:

#================#
#  I686 default  #
#================#
set basedir = $HOME/baselibs/v2_2_0rp2
set modinit = DUMMY

#============#
#  lake (ATANAS' machine)  #
#============#
if ($node == lake) then
   set basedir = /home/trayanov/baselibs/v3_1_0rp1

#============#
#  CALCULON  #
#============#
if ($node == calculon) then
   set basedir = /home/dasilva/baselibs/v2_2rp2_nb2

#===========#
#  CEREBUS  #
#===========#
else if ($node == cerebus) then
   set basedir = /home/trayanov/baselibs/v2_2_0rp2

endif
goto ACTION

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                         IP27 (IRIX64)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
IP27:

#================#
#  IP27 default  #
#================#
set basedir = $HOME/baselibs/v2_2r2
set mod1 = MIPSpro.7.4.2.0
set mod2 = mpt.1.9.0
set mod3 = scsl.1.3.0.

set mods = ( $mod1 $mod2 $mod3 )
set modinit = /opt/modules/modules/init/csh
set loadmodules = 0

#========#
#  ZEUS  #
#========#
if ($node == zeus) then

   set basedir = /share/ESMA/baselibs/v2_2r2
   set mod1 = MIPSpro.7.4.2.0
   set mod2 = mpt.1.9.0
   set mod3 = scsl.1.3.0.

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /opt/modules/modules/init/csh
   set loadmodules = 0

endif
goto ACTION

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                         IP35 (IRIX64)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
IP35:

#================#
#  IP35 default  #
#================#
set basedir = $HOME/baselibs/v2_2r2
set mod1 = MIPSpro.7.4.2.0
set mod2 = mpt.1.9.0
set mod3 = scsl.1.3.0.

set mods = ( $mod1 $mod2 $mod3 )
set modinit = /opt/modules/modules/init/csh
set loadmodules = 0

#=========#
#  DIRAC  #
#=========#
if ($node == dirac) then

   set basedir = /share/ESMA/baselibs/v2_2r2
   set mod1 = MIPSpro.7.4.2.0
   set mod2 = mpt.1.9.0
   set mod3 = scsl.1.3.0.

   set mods = ( $mod1 $mod2 $mod3 )
   set modinit = /opt/modules/modules/init/csh
   set loadmodules = 0

endif
goto ACTION


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#              perform requested action
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
ACTION:

#================#
#   SET VALUES   #
#================#

# set environment variables, BASEDIR and LD_LIBRARY_PATH; and load modules
#-------------------------------------------------------------------------
if ( $#argv == 0 ) then

   # improper usage, if file was not sourced
   #----------------------------------------
   if ( $scriptname == "$0" ) then
      goto usage
   endif

   # setenv BASEDIR
   #---------------
   echo -n "${scriptname}: Setting BASEDIR: "
   setenv BASEDIR $basedir
   echo "$BASEDIR"

   # add BASEDIR lib to LD_LIBRARY_PATH, if not already there
   #---------------------------------------------------------
   if ($?LD_LIBRARY_PATH) then
      echo $LD_LIBRARY_PATH | grep $BASEDIR/$arch/lib > /dev/null
      if ($status) then  #  == 1, if not found
         setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:$BASEDIR/$arch/lib
      endif
   else
      setenv LD_LIBRARY_PATH $BASEDIR/$arch/lib
   endif
 
   if ($?LD_LIBRARY64_PATH) then
      echo $LD_LIBRARY64_PATH | grep $BASEDIR/$arch/lib > /dev/null
      if ($status) then  #  == 1, if not found
         setenv LD_LIBRARY64_PATH ${LD_LIBRARY64_PATH}:$BASEDIR/$arch/lib
      endif
   endif
   if (($arch == "IRIX64") && (! $?LD_LIBRARY64_PATH)) then
      setenv LD_LIBRARY64_PATH $BASEDIR/$arch/lib
   endif
 
   # load library modules
   #---------------------
   if (-e $modinit) then
      echo "${scriptname}: Loading modules: ${mods}"
      source $modinit
      module purge

      if ($loadmodules) module load modules
      foreach mod ( $mods )
         module load $mod
      end

   endif

   # setenv Host Name
   #----------------
   echo -n "${scriptname}: Setting Host Name: "
   setenv HOSTMACH `hostname`_machine
   echo "$HOSTMACH"

   # setenv CHEMCASE
   #----------------
   echo -n "${scriptname}: Setting chemical mechanism: "
   setenv CHEMCASE $chemcase
   echo "$CHEMCASE"

   # setenv GMIHOME
   #----------------
   echo -n "${scriptname}: Setting GMIHOME: "
   setenv GMIHOME $gmihome
   echo "$GMIHOME"

   # set GMI internal paths
   #-----------------------
   echo "${scriptname}: Setting GMI internal paths"
   set gmi    = $GMIHOME
   set gem    = $GMIHOME/gem
   set gmib   = $GMIHOME/Applications/GmiBin
   set gmii   = $GMIHOME/Config

   set adveci = $GMIHOME/Components/GmiAdvection/include
   set chemi  = $GMIHOME/Components/GmiChemistry/include
   set deposi = $GMIHOME/Components/GmiDeposition/include
   set emissi = $GMIHOME/Components/GmiEmission/include
   set photi  = $GMIHOME/Components/GmiChemistry/photolysis/include
   set transi = $GMIHOME/gem/actm/gmimod/trans/include

   set esmi   = $GMIHOME/gem/esm/include
   set esmti  = $GMIHOME/gem/esm_tools/include

   set advec = $GMIHOME/Components/GmiAdvection
   set chem  = $GMIHOME/Components/GmiChemistry
   set depos = $GMIHOME/Components/GmiDeposition
   set conv  = $GMIHOME/Components/GmiConvection
   set diffu = $GMIHOME/Components/GmiDiffusion
   set emiss = $GMIHOME/Components/GmiEmission
   set phot  = $GMIHOME/Components/GmiChemistry/photolysis

   if ($?cdpath) then
     set cdpath = ($cdpath $gmi $advec $chem $depos $diffu $emiss $phot)
   else
     set cdpath = ($gmi $advec $chem $depos $diffu $emiss $phot)
   endif

   set path = ($path /usr/bin/X11)
   set path = ($path $gmi/Applications/GmiBin $gmi/Shared/GmiScripts)

   set machineName = `echo $HOSTMACH | awk '{print substr($0,0,8)}'`
   if ($machineName == discover) then
     setenv HOSTMACH $machineName
   endif


#===================#
#   ECHO VALUE(s)   #
#===================#
else if ( $1 == basedir ) then
   echo $basedir

else if ( $1 == modules ) then
   echo $mods

else if ( $1 == modinit ) then
   echo $modinit

else if ( $1 == loadmodules ) then
   echo $loadmodules

else if ( $1 == help ) then
   goto usage

else
   echo2 "${scriptname}: >>>ERROR<<< unrecognizable option -- $1"
   echo2 Type "$scriptname help" for usage information.
   echo 0   # indicating error condition
   exit 9
endif

exit

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#                    usage information                    #
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
usage:

less <<EOF

NAME
     $scriptname 
        GMI cript to handle BASEDIR, library module definitions and
        internal paths definitions.

DESCRIPTION

     This script provides a single location for storing the BASEDIR,
     library module name information, and paths to GMI internal directories. 
     Previous to this script, this information was coded in multiple files.

     This script will set the BASEDIR environment variable to its proper value,
     add the BASEDIR lib directory to LD_LIBRARY_PATH (if necessary), and will
     load library modules when sourced.

     If the script is called with "basedir", "modules", "modinit", or 
     "loadmodules", then it will echo the values to standard output without
     modifying the environment.

SYNOPSIS

     source $scriptname

     or

     $scriptname <option>

OPTIONS

     help                echo usage
     basedir             echo expected value for BASEDIR environment variable
     modules             echo expected list of modules
     modinit             echo location of module initialization script
     loadmodules         echo logical indicating whether "module load modules"
                              is needed prior to loading other modules

EOF

exit 1
